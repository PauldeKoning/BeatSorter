@model BeatSorter.ViewModels.BeatmapViewModel
<div class="card mb-4 bg-light box-shadow box-shadow-card-hover card-clickable">
    <div class="row no-gutters">
        <div class="img-square-wrapper col-lg-5 col-xl-4 col-sm-12 col-md-6">
            <img class="w-100" src="https://beatsaver.com/cdn/@(Model.Key)/@(Model.Hash).jpg" 
                 onerror="this.src = this.src.replace('jpg', 'png');"
                 onclick="window.location.href='./Detail/@(Model.Id)'">
        </div>
        <div class="col-lg-7 col-xl-8 col-sm-12 col-md-6 d-flex flex-column">
            <div class="card-body">
                <h5 class="card-title"><b>@Html.ActionLink(Model.Title, "Detail", "Beatmap", new { id = Model.Id })</b></h5>
                <table class="text-muted">
                    <tr>
                        <td>Uploaded by:</td>
                        <td class="pl-3"><b>@Html.ActionLink(Model.Uploader.Username, "Detail", "Uploader", new { id = Model.Id })</b></td>
                    </tr>
                    <tr>
                        <td>Created by:</td>
                        <td class="pl-3"><b>@Model.LevelAuthor</b></td>
                    </tr>
                    <tr>
                        <td>Artist:</td>
                        <td class="pl-3"><b>@Model.SongAuthor</b></td>
                    </tr>
                    <tr>
                        <td>Duration:</td>
                        <td class="pl-3"><b>@Model.DurationFormatted</b></td>
                    </tr>
                    <tr>
                        <td>BPM:</td>
                        <td class="pl-3"><b>@Model.BPM</b></td>
                    </tr>
                </table>
            </div>
            <div>
                <h5 class="pl-2">
                    @if (Model.DifficultyTypes.Contains("standard") && Model.DifficultyTypes.Count != 1)
                    {
                        <button id="SongView_@(Model.Id)_@("standard")" class="SongView_@(Model.Id) btn btn-info btn-sm badge-difficulty-type" data-difficulties='@Html.Raw(Json.Serialize(Model.GetAvailableDifficulties("standard")))'>Standard</button>
                    }
                    @if (Model.DifficultyTypes.Contains("onesaber"))
                    {
                        <button id="SongView_@(Model.Id)_@("onesaber")" class="SongView_@(Model.Id) btn btn-info btn-sm badge-difficulty-type" data-difficulties='@Html.Raw(Json.Serialize(Model.GetAvailableDifficulties("onesaber")))'>One Saber</button>
                    }
                    @if (Model.DifficultyTypes.Contains("360degree"))
                    {
                        <button id="SongView_@(Model.Id)_@("360degree")" class="SongView_@(Model.Id) btn btn-info btn-sm badge-difficulty-type" data-difficulties='@Html.Raw(Json.Serialize(Model.GetAvailableDifficulties("360degree")))'>360&deg;</button>
                    }
                    @if (Model.DifficultyTypes.Contains("90degree"))
                    {
                        <button id="SongView_@(Model.Id)_@("90degree")" class="SongView_@(Model.Id) btn btn-info btn-sm badge-difficulty-type" data-difficulties='@Html.Raw(Json.Serialize(Model.GetAvailableDifficulties("90degree")))'>90&deg;</button>
                    }
                    @if (Model.DifficultyTypes.Contains("noarrows"))
                    {
                        <button id="SongView_@(Model.Id)_@("noarrows")" class="SongView_@(Model.Id) btn btn-info btn-sm badge-difficulty-type" data-difficulties='@Html.Raw(Json.Serialize(Model.GetAvailableDifficulties("noarrows")))'>No Arrows</button>
                    }
                    @if (Model.DifficultyTypes.Contains("lightshow"))
                    {
                        <button id="SongView_@(Model.Id)_@("lightshow")" class="SongView_@(Model.Id) btn btn-outline-info btn-sm badge-difficulty-type" data-difficulties='@Html.Raw(Json.Serialize(Model.GetAvailableDifficulties("lightshow")))'>Lightshow</button>
                    }
                    @if (Model.DifficultyTypes.Contains("lawless"))
                    {
                        <button id="SongView_@(Model.Id)_@("lawless")" class="SongView_@(Model.Id) btn btn-outline-danger btn-sm badge-difficulty-type" data-difficulties='@Html.Raw(Json.Serialize(Model.GetAvailableDifficulties("lawless")))'>Lawless</button>
                    }
                </h5>
            </div>
            <div>
                <h5 class="pl-2">
                    <span id="SongView_@(Model.Id)_difficulty_easy" class="SongView_@(Model.Id)_difficulty  p-2 badge badge-success @(Model.ContainsDifficulty("standard", "easy") ? "" : "badge-not-present")">Easy</span>
                    <span id="SongView_@(Model.Id)_difficulty_normal" class="SongView_@(Model.Id)_difficulty  p-2 badge badge-secondary @(Model.ContainsDifficulty("standard", "normal") ? "" : "badge-not-present")">Normal</span>
                    <span id="SongView_@(Model.Id)_difficulty_hard" class="SongView_@(Model.Id)_difficulty  p-2 badge badge-primary @(Model.ContainsDifficulty("standard", "hard") ? "" : "badge-not-present")">Hard</span>
                    <span id="SongView_@(Model.Id)_difficulty_expert" class="SongView_@(Model.Id)_difficulty  p-2 badge badge-danger @(Model.ContainsDifficulty("standard", "expert") ? "" : "badge-not-present")">Expert</span>
                    <span id="SongView_@(Model.Id)_difficulty_expertplus" class="SongView_@(Model.Id)_difficulty  p-2 badge text-white @(Model.ContainsDifficulty("standard", "expertplus") ? "" : "badge-not-present")" style="background-color: #8f48db;">Expert+</span>
                </h5>
            </div>
            <div class="display-bottom-right m-2 d-none d-sm-block d-md-none d-lg-block">
                <button class="btn btn-outline-dark mb-1 btn-sm w-100" data-toggle="tooltip" data-placement="left" title="QInstall&trade;">Q&trade;</button><br>
                <button class="btn btn-outline-dark mb-1 btn-sm w-100" data-toggle="tooltip" data-placement="left" title="Add to playlist"><i class="fas fa-list"></i></button><br>
                <button class="btn btn-primary" onclick="window.open('https://beatsaver.com/cdn/@(Model.Key)/@(Model.Hash).zip');"><i class="fas fa-download"></i></button>
            </div>
        </div>

        <div class="display-top-left m-2 d-sm-none d-md-block d-lg-none">
            <button class="btn btn-primary"><i class="fas fa-download"></i></button>
            <button class="btn btn-secondary mb-1 btn-sm">Q&trade;</button>
            <button class="btn btn-secondary mb-1 btn-sm" onclick="window.open('https://beatsaver.com/cdn/@(Model.Key)/@(Model.Hash).zip');"><i class="fas fa-list"></i></button>
        </div>
    </div>
</div>

@if ((Model.DifficultyTypes.Contains("standard") && Model.DifficultyTypes.Count != 1) || !Model.DifficultyTypes.Contains("standard"))
{ //For performance reasons, only include code when there is a custom gamemode available
    <script>
    $(".SongView_@(Model.Id)").on("click", function () {
        $(".SongView_@(Model.Id)_difficulty").addClass("badge-not-present");
        $(this).data('difficulties').forEach(d => {
            $("#SongView_@(Model.Id)_difficulty_" + d).removeClass("badge-not-present");
        });
        $(".SongView_@(Model.Id)").addClass("badge-not-clicked");
        $(this).removeClass("badge-not-clicked");
    });

    $(".SongView_@(Model.Id)").hover(function () {
        $(this).data('original-elements-selected', (function () {
            var elements = [...$(".SongView_@(Model.Id)_difficulty").not(".badge-not-present")];
            for (let i = 0; i < elements.length; i++) elements[i] = elements[i].id.substr(elements[i].id.indexOf("difficulty_") + 11);
            return elements;
        })());

        $(".SongView_@(Model.Id)_difficulty").addClass("badge-not-present");
        $(this).data('difficulties').forEach(d => {
            $("#SongView_@(Model.Id)_difficulty_" + d).removeClass("badge-not-present");
        });
    }, function () {
        if (!$(this).hasClass("badge-not-clicked")) return;
        $(".SongView_@(Model.Id)_difficulty").addClass("badge-not-present");
        $(this).data('original-elements-selected').forEach(d => {
            $("#SongView_@(Model.Id)_difficulty_" + d).removeClass("badge-not-present");
        });
    });

    $(".SongView_@(Model.Id)")[0].click();
    </script>
}

